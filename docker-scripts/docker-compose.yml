version: '3.3'

services:
  front:
    image: nowheresly/frontend:latest
    hostname: 'front'
    ports:
    - "8000:8080/tcp"
    networks:
    - frontend
    deploy:
      labels:
      - "traefik.backend=front"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefix: /front"
      - "traefik.docker.network=mcr_frontend"
      - "traefik.backend.loadbalancer.swarm=true"
    labels:
    - "traefik.backend=front"
    - "traefik.port=8080"
    - "traefik.frontend.rule=PathPrefix: /front"
    - "traefik.docker.network=frontend"


  keycloak:
    image: jboss/keycloak:3.4.1.Final
    hostname: keycloak
    ports:
    - "9191:8080/tcp"
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      POSTGRES_DATABASE: keycloak
      POSTGRES_USER: ukeycloak
      POSTGRES_PASSWORD: password
      POSTGRES_PORT_5432_TCP_ADDR: pgdb
    networks:
    - frontend
    deploy:
      labels:
      - "traefik.backend=keycloak"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefix: /auth"
      - "traefik.docker.network=mcr_frontend"
    labels:
    - "traefik.backend=keycloak"
    - "traefik.port=8080"
    - "traefik.frontend.rule=PathPrefix: /auth"
    - "traefik.docker.network=frontend"


  mcr1:
    image: nowheresly/mcr1:latest
    hostname: 'mcr1'
    ports:
    - "8010:8080/tcp"
    networks:
    - frontend
    deploy:
      labels:
      - "traefik.backend=mcr1"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefix: /mcr1"
      - "traefik.docker.network=mcr_frontend"
      - "traefik.backend.loadbalancer.swarm=true"
    labels:
    - "traefik.backend=mcr1"
    - "traefik.port=8080"
    - "traefik.frontend.rule=PathPrefix: /mcr1"
    - "traefik.docker.network=frontend"

  mcr2:
    image: nowheresly/mcr2:latest
    hostname: 'mcr2'
    ports:
    - "8020:8080/tcp"
    networks:
    - frontend
    deploy:
      labels:
      - "traefik.backend=mcr2"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefix: /mcr2"
      - "traefik.docker.network=mcr_frontend"
      - "traefik.backend.loadbalancer.swarm=true"
    labels:
    - "traefik.backend=mcr2"
    - "traefik.port=8080"
    - "traefik.frontend.rule=PathPrefix: /mcr2"
    - "traefik.docker.network=frontend"

  mcr3:
    image: nowheresly/mcr3:latest
    hostname: 'mcr3'
    ports:
    - "8030:8080/tcp"
    networks:
    - frontend
    deploy:
      labels:
      - "traefik.backend=mcr3"
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefix: /mcr3"
      - "traefik.docker.network=mcr_frontend"
      - "traefik.backend.loadbalancer.swarm=true"
    labels:
    - "traefik.backend=mcr3"
    - "traefik.port=8080"
    - "traefik.frontend.rule=PathPrefix: /mcr3"
    - "traefik.docker.network=frontend"

  pgdb:
    image: postgres:10.1
    hostname: 'pgdb'
    ports:
    - 5432:5432/tcp
    environment:
    - POSTGRES_PASSWORD=password
    volumes:
    - pg-db-volume:/var/lib/postgresql/data
    networks:
    - frontend

  traefik:
    image: traefik:1.4.4
    command: --web --docker --docker.domain=docker.localhost --logLevel=DEBUG --docker.swarmmode=true --docker.watch
    hostname: traefik
    ports:
    - "8080:8080/tcp"
    - "80:80/tcp"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /dev/null:/traefik.toml
    deploy:
      labels:
      - "traefik.enable=false"
      - "traefik.docker.network=mcr_frontend"
    labels:
    - "traefik.enable=false"
    - "traefik.docker.network=frontend"
    networks:
    - frontend

networks:
  frontend:
    driver: overlay

volumes:
  pg-db-volume:
    driver: local

